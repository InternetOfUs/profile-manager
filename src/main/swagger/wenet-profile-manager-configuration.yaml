resourcePackages:
- eu.internetofus.wenet_profile_manager.api
prettyPrint: true
cacheTTL: 0
openAPI:
  tags:
    - name: Profiles
      description: The functionality provided allows to access current and previous values of user attributes that define the user profile.  It also allows you to modify the current values.
    - name: Communities
      description: The functionality provided allows to manipulate the communities of users.
    - name: Historic
      description: The functionality provided allows to access to the values of the models in previous dates.
    - name: Trusts
      description: The functionality provided allows to manage the trust over other users.
    - name: Norms
      description: The functionality provided allows to manage the norms defined into a user/community profile.
    - name: Planned activities
      description: The functionality provided allows to manage the planned activities defined into a user profile.
    - name: Relevant locations
      description: The functionality provided allows to manage the relevant locations defined into a user profile.
    - name: Relationships
      description: The functionality provided allows to manage the relationships defined into a user profile.
    - name: Personal behaviors
      description: The functionality provided allows to manage the personal behaviors defined into a user profile.
    - name: Materials
      description: The functionality provided allows to manage the materials defined into a user profile.
    - name: Competences
      description: The functionality provided allows to manage the competences defined into a user profile.
    - name: Meanings
      description: The functionality provided allows to manage the meanings defined into a user profile.
    - name: Community members
      description: The functionality provided allows to manage the members of a community.
    - name: Social practices
      description: The functionality provided allows to manage the social practices defined into a community profile.
    - name: User identifiers
      description: The functionality provided allows to obtain all the user identifiers.
    - name: Operations
      description: Calculus that can do over one or some user profiles.
    - name: Other
      description: Other services provided by the API.
  info:
    # The verion of the API has to be synchonized with the 'api-version' property of the 'pom.xml'
    version: '1.1.0'
    title: WeNet - Profile manager API
    description:  >-
      The profile manager component is responsible for storing and maintaining the WeNet user profiles.
      A user profile is a set of attributes that define the state of the user. Some of these
      attributes are filled in by the user, such as name, email, telephone,..., or by  other components of
      the platform, such routines.

      The social relationships of a user are not stored on the profile, because a user can have a relationship
      with all the playing applications of the user, and this could be a lot of relationships. For this reason,
      the profile manager provides web services to add/update/delete/get these relationships.

      The profile manager has the capability to maintain a historic with the profile changes. By default,
      this behaviour is disabled and it can be enabled on the server configuration, or using a parameter
      on the update profile requests. This allows knowing, to the rest of the components,
      how the state of the user evolves in time.

      Another responsibility of the profile manager is to evaluate the trust of one user over another when it is
      doing some action. The trust is dynamic and will be updated every time they collaborate to achieve a task.
      When a user has received some help it can rate the performance of the user that has helped it. For this, it has to
      post a performance rating event to the profile manager. These events are used by the profile manager when
      it has to provide the trust that has a user that another does a certain action. When you want to calculate
      the trust, you must specify some parameters that are used to select events that have to be aggregated to obtain
      the trust. Also, you must define the aggregation function, which can be:

       - RECENCY_BASED: the trust is the average of the last 'n' rating events. At the moment n=5.
       - AVERAGE: the trust is the average of all the rating events.
       - MEDIAN: the trust is the median of all the rating events.
       - MINIMUM: the trust is the minimum rating of all the events.
       - MAXIMUM: the trust is the maximum rating of all the events.

    contact:
      name: Bruno Rosell i Gui (UDT-IA, IIIA-CSIC)
      email: rosell@iiia.csic.es
    license:
      name: Apache V2
      url: http://www.apache.org/licenses/LICENSE-2.0
  servers:
    - url: https://internetofus.u-hopper.com/prod/profile_manager
      description: Production instance
    - url: https://wenet.u-hopper.com/dev/profile_manager
      description: Staging instance
    - url: https://ardid.iiia.csic.es/wenet/profile-manager
      description: IIIA development server
